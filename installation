Installation and Usage

## Dependencies and Installation
The code works with Python 3.7 and is also Python 2.7 compatible. You need to install Python (3.7 preferred) and the following list of packages:
  * [Pandas](https://pandas.pydata.org/pandas-docs/stable/getting_started/install.html)
  * datetime, os, ast, sys, get_opt are all part of python’s standard library. 

## Directory Structure and File Name Format
### Contact Tracing Tool:
The directory structure for the contact tracing tool is as follows:

\WiTrace
    - \code
    - \data
        - \reports (auto generated)
        - \temp_df (auto generated)

code directory : This directory has all the python code / script files 

data diretory : The trajectory data files used by the tool are stored here. The naming convention of the trajectory files is `<YYYYMMDD>_finaltraj.csv`. For eg: if the input to the contact tracing tool is a trajectory file for 24 Jan 2020, the trajectory file name will be `20200124_finaltraj.csv`

reports subdirectory : The patient location visit report and user colocation reports generated by the tool are stored in here. The Patient report naming convention is `Patient_Report_<Patient_MAC_ID>_<date>.txt` while the user colocation report naming convention is `User_Report_<Patient_MAC_ID>_<date>.txt`

### WiFi logs to Trajectory Extraction System:

The directory structure for the WiFi logs to trajectory extraction system is as follows:

\WiFi_Trajectory
    - \code
    - \data
        - \presence_msg (auto generated)
        - \trajecory (auto generated) 
        - \Users (auto generated)

code directory : This directory has all the python code / script files 

data diretory : The WiFi log data files (unzipped) used by the tool are stored here. It has 3 sub-diredctories:

  presence_msg : This subdirectory is used to temporarily store the event messages from the WiFi logs files that indicate any event message between an access point and a device.
  
  trajecory : This subdirectory is used to store the final device trajectories extracted from the WiFi logs. Naming convention of the trajectory file created is `<YYYYMMDD>_finaltraj.csv`. (This file is the input to the contact tracing tool described above, see data directory description of contact tracing tool above).
  
  Users : In todays world each user has multiple devices to identify all the devices associated with a user we need a mapping file. This subdirectory stores the mapping between user and devices. The naming convention of the generated mapping file is `<YYYYMMDD>_umap.csv`. Where `YYYYMMDD` is the date of the entered WiFi logs data file.

## Data Format

### Contact Tracing Tool:
Contact Tracing Input file is a csv file with 8 columns as below : 

    MAC, Year, Month, Date, AP_Trajectory, AP_Traj_Start, AP_Traj_End and AP_Duration

Field Description:

- MAC: (MAC Id of the device)
- Year: YYYY 
- Month: MMM (eg: Jan, Feb, Mar, etc)
- Date: DD (01-31)
- AP_Trajectory : List of locations (Access Point or Buildings or any location identifier) 
- AP_Traj_Start: List of all start time of visits at each of the location in AP_Trajectory in mins of the day
- AP_Traj_End: List of all end time of visits at each of the location in AP_Trajectory in mins of the day
- AP_Duration: List of all duration of visits at each of the location in AP_Trajectory (this is a difference of AP_Traj_End and AP_Traj_Start at each location) in mins

Example explanation of valid values for each field:

Consider a device with mac id “0x-DE-AD-BE-EF” that visited multiple locations on 19-Jan-2020 and the user visited multiple locations as below:

    -Location1 from 10:00am untill 10:59am
    -Location2 from 11:00am untill 11:59am
    -Location3 from noon till 5pm

then, for the above device the valid values for the various fields are:

- MAC -> 0x-DE-AD-BE-EF
- Year -> 2020
- Month -> Jan
- Date -> 19
- AP_Trajectory -> [“Location1”, “Location2”, “Location3”]
- AP_Traj_Start -> [600,660,720]
- AP_Traj_End -> [659, 719,1020]
- AP_Duration -> [59,59,300]


An example input data file <to be added: amee reminder>

### WiFi logs to Trajectory Extraction System:

HP Aruba WiFi log Format:

The WiFi log of HP Aruba also called syslog file contains a list of events. A typical event message in the Wifi log/syslog looks as below:
<Month Date> <hh:mm:ss> <controller_name> <process_id> <message_subtype> <controller_name masked_IP> <message_body>

This is the log file generated by HP Aruba WiFi Access Point. It is the input file to extract trajectories from WiFi logs.

## Example Usage
### Contact tracing tool 
Example usage of the contact tracing tool is as below:

Contact Tracing tool needs 4 command line arguments :
mac id, start time, end time and window size

To generate the contact trace for a mac_id "0x-DE-AD-BE-EF” for dates from 19-Jan-2020 till 24-Jan-2020 and the pathogen active window is 1 hr (time window for which the pathogen is active even after the infected patient leaves the location) , we would run the python script as below:

python main.py -m "0x-DE-AD-BE-EF" -s 20200119 -e 20200124 -w 1

If you want strict co-location then, enter window size as 0 ( -w 0 )

### WiFi logs to Trajectory Extraction System
Example usage of the trajectory extraction system is 

\WiFi_traj\main.py date

where date format is YYYYMMDD is the date for which the trajectories from the WiFi logs file need to be extracted.
Note that the WiFi log/syslog filename should have date in it for example: NET-wifi-all.log.20200119.encrypted is a valid syslog/WiFi log input filename.

## Report Output
